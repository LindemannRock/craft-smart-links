!function(){"use strict";const n=window.smartLinksTracking||{},e=n.debug||!1,t=e?console.log.bind(console,"[Smart Links]"):()=>{},o=e?console.warn.bind(console,"[Smart Links]"):()=>{},r=console.error.bind(console,"[Smart Links]");if(!n.smartLinkId||!n.trackingEndpoint||!n.csrfEndpoint)return void o("Tracking not configured");if(window._smartLinksTracked)return void t("Already tracked on this page load");window._smartLinksTracked=!0;const a=n.urls||{},i=n.smartLinkId,c=n.trackAnalytics,d=n.trackingEndpoint,s=n.csrfEndpoint,l=new URLSearchParams(window.location.search).get("src")||"direct";t("Starting tracking...",{smartLinkId:i,source:l,trackAnalytics:c,urls:a}),fetch(s,{credentials:"same-origin",cache:"no-store"}).then(n=>(t("CSRF response received"),n.json())).then(n=>{t("CSRF data:",n);let e="";const o=n.platform||"unknown";"ios"===o?e=a.ios||"":"android"===o||"huawei"===o?e=a[o]||a.android||"":"windows"===o?e=a.windows||"":"macos"===o&&(e=a.mac||""),t("Platform detected:",o,"Redirect URL:",e);const s=e&&n.isMobile||"qr"===l;if(c&&s){t("Sending tracking beacon...");const o=new FormData;o.append("smartLinkId",i),o.append("platform","redirect"),o.append("url",e),o.append("source",l),o.append("CRAFT_CSRF_TOKEN",n.csrfToken),fetch(d,{method:"POST",body:o}).then(()=>{t("Tracking sent"),e&&(t("Redirecting to:",e),window.location.replace(e))}).catch(n=>{r("Tracking failed:",n),e&&(t("Redirecting to:",e),window.location.replace(e))})}else t("Not tracking page load (no redirect URL or desktop without QR parameter)"),e?(t("Redirecting to:",e),window.location.replace(e)):t("No redirect URL for platform:",o,"- showing landing page")}).catch(n=>{r("Error during tracking:",n),o("Device detection failed, page will load normally:",n)}),document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll(".smartlink-btn, .trackable-link").forEach(function(n){n.addEventListener("click",function(n){n.preventDefault();const e=this.getAttribute("href"),t=this.textContent.trim(),o=this.getAttribute("data-platform")||t.toLowerCase().replace(/\s+/g,"-");fetch(s,{credentials:"same-origin",cache:"no-store"}).then(n=>n.json()).then(n=>{const t=new FormData;t.append("smartLinkId",i),t.append("platform",o),t.append("url",e),t.append("source","landing"),t.append("CRAFT_CSRF_TOKEN",n.csrfToken),fetch(d,{method:"POST",body:t}).then(()=>{window.location.href=e}).catch(()=>{window.location.href=e})}).catch(()=>{window.location.href=e})})})})}();