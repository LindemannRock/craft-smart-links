{% extends "smart-links/_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% set title = "Smart Links"|t('smart-links') %}
{% set selectedSubnavItem = 'links' %}

{# Set up breadcrumbs with site switcher #}
{% if craft.app.getIsMultiSite() %}
    {% set currentSite = craft.app.request.getQueryParam('site') ? craft.app.sites.getSiteByHandle(craft.app.request.getQueryParam('site')) : craft.app.sites.getCurrentSite() %}
    
    {# Get site menu items #}
    {% set siteMenuItems = [] %}
    {% for site in craft.app.sites.getEditableSites() %}
        {% set siteMenuItems = siteMenuItems|merge([{
            label: site.name,
            url: url('smart-links', {site: site.handle}),
            selected: site.id == currentSite.id
        }]) %}
    {% endfor %}
    
    {% set crumbs = [{
        id: 'site-crumb',
        icon: 'world',
        label: currentSite.name|t('site'),
        menu: {
            items: siteMenuItems,
            label: 'Select site'|t('app')
        }
    }] %}
{% endif %}

{# Define these at the template level so they're available in JS block #}
{% set currentStatus = craft.app.request.getParam('status') ?? 'all' %}
{% set search = craft.app.request.getParam('search') ?? '' %}
{% set currentPage = (craft.app.request.getParam('page') ?? 1)|integer %}
{% set settings = craft.smartLinks.getSettings() %}
{% set itemsPerPage = settings.itemsPerPage ?? 100 %}
{% set sort = craft.app.request.getParam('sort') ?? 'dateCreated' %}
{% set dir = craft.app.request.getParam('dir') ?? 'desc' %}

{% block actionButton %}
    {% if currentUser.can('smartLinks:createLinks') %}
        <a href="{{ url('smart-links/smartlinks/new', currentSite ? {site: currentSite.handle} : {}) }}" class="btn submit">
            {{ "New smart link"|t('smart-links') }}
        </a>
    {% endif %}
{% endblock %}

{% block toolbar %}
    <div id="toolbar" class="flex">
        <div class="flex-grow">
            <form method="get">
                <div class="flex">
                    <div class="btngroup">
                        <button type="button" class="btn menubtn statusmenubtn">
                            {% if currentStatus == 'trashed' %}
                                <span class="icon" data-icon="trash" aria-hidden="true"></span>{{ "Trashed"|t('app') }}
                            {% else %}
                                <span class="status {{ currentStatus == 'active' ? 'live' : (currentStatus == 'inactive' ? 'disabled' : 'all') }}"></span>{{ currentStatus == 'active' ? 'Live'|t('app') : (currentStatus == 'inactive' ? 'Disabled'|t('app') : 'All'|t('app')) }}
                            {% endif %}
                        </button>
                        <div class="menu" role="listbox">
                            <ul class="padded" role="group">
                                <li role="option"><a href="{{ url('smart-links/smartlinks', { status: 'all', search: search, sort: sort, dir: dir, site: currentSite ? currentSite.handle : null }) }}" class="{{ currentStatus == 'all' ? 'sel' : '' }}">
                                    <span class="status all"></span>{{ "All"|t('smart-links') }}
                                </a></li>
                                <li role="option"><a href="{{ url('smart-links/smartlinks', { status: 'active', search: search, sort: sort, dir: dir, site: currentSite ? currentSite.handle : null }) }}" class="{{ currentStatus == 'active' ? 'sel' : '' }}">
                                    <span class="status live"></span>{{ "Live"|t('app') }}
                                </a></li>
                                <li role="option"><a href="{{ url('smart-links/smartlinks', { status: 'inactive', search: search, sort: sort, dir: dir, site: currentSite ? currentSite.handle : null }) }}" class="{{ currentStatus == 'inactive' ? 'sel' : '' }}">
                                    <span class="status disabled"></span>{{ "Disabled"|t('app') }}
                                </a></li>
                            </ul>
                            <hr class="padded" role="presentation">
                            <ul class="padded" role="group">
                                <li role="option"><a href="{{ url('smart-links/smartlinks', { status: 'trashed', search: search, sort: sort, dir: dir, site: currentSite ? currentSite.handle : null }) }}" class="{{ currentStatus == 'trashed' ? 'sel' : '' }}">
                                    <span class="icon" data-icon="trash" aria-hidden="true"></span>{{ "Trashed"|t('app') }}
                                </a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="search-container texticon flex-grow">
                        <span class="texticon-icon search icon" aria-hidden="true"></span>
                        <input type="text" 
                               class="clearable text fullwidth" 
                               name="search" 
                               value="{{ search }}" 
                               placeholder="{{ 'Search'|t('smart-links') }}" 
                               autocomplete="off" 
                               dir="ltr"
                               aria-label="Search"
                               {% if search %}autofocus{% endif %}>
                        <button class="clear-btn {{ search ? '' : 'hidden' }}" 
                                title="Clear search" 
                                role="button" 
                                aria-label="Clear search"></button>
                        {% if currentSite %}
                            <input type="hidden" name="site" value="{{ currentSite.handle }}">
                        {% endif %}
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% block content %}
    <div id="smartlinks-index">
        {% set query = craft.smartLinks.find() %}
        
        {# Apply status filter #}
        {% if currentStatus == 'trashed' %}
            {% set query = query.trashed(true) %}
        {% else %}
            {% set query = query.trashed(false) %}
            {% if currentStatus == 'active' %}
                {% set query = query.active(true) %}
            {% elseif currentStatus == 'inactive' %}
                {% set query = query.active(false) %}
            {% endif %}
        {% endif %}
        
        {# Apply search #}
        {% if search %}
            {% set query = query.search(search) %}
        {% endif %}
        
        {# Apply sorting #}
        {% set orderBy = sort ~ ' ' ~ dir %}
        {% set query = query.orderBy(orderBy) %}
        
        {# Get total count for pagination #}
        {% set totalCount = query.count() %}
        {% set totalPages = (totalCount / itemsPerPage)|round(0, 'ceil') %}
        
        {# Get paginated results #}
        {% set offset = (currentPage - 1) * itemsPerPage %}
        {% set smartLinks = query.limit(itemsPerPage).offset(offset).all() %}
        
        <div class="elements">
            <div class="tableview tablepane">
                <span class="visually-hidden" data-status-message="" role="status"></span>
                <table class="data fullwidth big" data-name="Smart Links">
                    <caption class="visually-hidden">Smart Links<span id="sort-instructions-smartlinks" data-sort-instructions="">, Column headers with buttons are sortable</span></caption>
                    <thead>
                        <tr>
                            <th class="checkbox-cell selectallcontainer">
                                <div class="checkbox" role="checkbox" tabindex="0" aria-checked="false" aria-label="Select all"></div>
                            </th>
                            <th scope="col" data-attribute="name" class="orderable {{ sort == 'name' ? 'ordered ' ~ dir : '' }}" aria-sort="{{ sort == 'name' ? (dir == 'asc' ? 'ascending' : 'descending') : 'none' }}">
                                <button type="button" aria-pressed="{{ sort == 'name' ? 'true' : 'false' }}" data-sort="name" aria-describedby="sort-instructions-smartlinks">
                                    {{ "Title"|t('smart-links') }}
                                    <div class="spinner"></div>
                                </button>
                            </th>
                            <th scope="col" data-attribute="slug" class="orderable {{ sort == 'slug' ? 'ordered ' ~ dir : '' }}" aria-sort="{{ sort == 'slug' ? (dir == 'asc' ? 'ascending' : 'descending') : 'none' }}">
                                <button type="button" aria-pressed="{{ sort == 'slug' ? 'true' : 'false' }}" data-sort="slug" aria-describedby="sort-instructions-smartlinks">
                                    {{ "Slug"|t('smart-links') }}
                                    <div class="spinner"></div>
                                </button>
                            </th>
                            <th scope="col" data-attribute="active" aria-sort="none">
                                {{ "Status"|t('smart-links') }}
                                <div class="spinner"></div>
                            </th>
                            <th scope="col" data-attribute="clicks" class="orderable {{ sort == 'clicks' ? 'ordered ' ~ dir : '' }}" aria-sort="{{ sort == 'clicks' ? (dir == 'asc' ? 'ascending' : 'descending') : 'none' }}">
                                <button type="button" aria-pressed="{{ sort == 'clicks' ? 'true' : 'false' }}" data-sort="clicks" aria-describedby="sort-instructions-smartlinks">
                                    {{ "Clicks"|t('smart-links') }}
                                    <div class="spinner"></div>
                                </button>
                            </th>
                            <th scope="col" data-attribute="dateCreated" class="orderable {{ sort == 'dateCreated' ? 'ordered ' ~ dir : '' }}" aria-sort="{{ sort == 'dateCreated' ? (dir == 'asc' ? 'ascending' : 'descending') : 'none' }}">
                                <button type="button" aria-pressed="{{ sort == 'dateCreated' ? 'true' : 'false' }}" data-sort="dateCreated" aria-describedby="sort-instructions-smartlinks">
                                    {{ "Date Created"|t('app') }}
                                    <div class="spinner"></div>
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        {% if smartLinks|length %}
                            {% for smartLink in smartLinks %}
                                <tr data-id="{{ smartLink.id }}" data-name="{{ smartLink.title }}">
                                    <td class="checkbox-cell">
                                        <div class="checkbox" title="Select" tabindex="0" aria-checked="false" aria-labelledby="checkbox-label-{{ smartLink.id }}" role="checkbox"></div>
                                        <span id="checkbox-label-{{ smartLink.id }}" class="visually-hidden" aria-hidden="true">{{ smartLink.title }}</span>
                                    </td>
                                    <td data-title="Title" data-titlecell="">
                                        {% if currentStatus == 'trashed' %}
                                            {{ smartLink.title }}
                                        {% else %}
                                            <a href="{{ url('smart-links/smartlinks/' ~ smartLink.id, currentSite ? {site: currentSite.handle} : {}) }}">
                                                {{ smartLink.title }}
                                            </a>
                                        {% endif %}
                                    </td>
                                    <td data-title="Slug" data-attr="slug">
                                        <code>{{ smartLink.slug }}</code>
                                    </td>
                                    <td data-title="Status" data-attr="active">
                                        <span class="status-label {{ smartLink.active ? 'teal' : 'gray' }}">
                                            <span class="status {{ smartLink.active ? 'teal' : 'disabled' }}"></span>
                                            <span class="status-label-text">{{ smartLink.active ? 'Live'|t('app') : 'Disabled'|t('app') }}</span>
                                        </span>
                                    </td>
                                    <td data-title="Clicks" data-attr="clicks">{{ smartLink.clicks|number }}</td>
                                    <td data-title="Date Created" data-attr="dateCreated">{{ smartLink.dateCreated|datetime('short') }}</td>
                                </tr>
                            {% endfor %}
                        {% else %}
                            <tr>
                                <td colspan="6" class="centeralign">
                                    <p class="light">
                                        {% if search %}
                                            {{ "No smart links found matching your search."|t('smart-links') }}
                                        {% else %}
                                            {{ "No smart links exist yet."|t('smart-links') }}
                                        {% endif %}
                                    </p>
                                </td>
                            </tr>
                        {% endif %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    {# Footer with pagination #}
    <div id="footer" class="flex-justify flex">
        <div id="count-spinner" class="spinner small hidden"></div>
        <div id="count-container" class="light">
            <div class="pagination flex">
                <nav class="flex" aria-label="entry pagination">
                    <button type="button" role="button" class="page-link prev-page {{ currentPage <= 1 ? 'disabled' : '' }}" {{ currentPage <= 1 ? 'disabled' : '' }} title="Previous Page"></button><button type="button" role="button" class="page-link next-page {{ currentPage >= totalPages ? 'disabled' : '' }}" {{ currentPage >= totalPages ? 'disabled' : '' }} title="Next Page"></button>
                </nav>
                <div class="page-info">
                    {% set startRange = offset + 1 %}
                    {% set endRange = min(offset + itemsPerPage, totalCount) %}
                    {% if totalCount == 0 %}
                        No entries
                    {% else %}
                        {{ startRange }}–{{ endRange }} of {{ totalCount }} {{ totalCount == 1 ? 'entry' : 'entries' }}
                    {% endif %}
                </div>
            </div>
        </div>
        <div id="actions-container" class="hidden">
            {% if currentStatus != 'trashed' %}
                <div>
                    <button type="button" class="btn menubtn secondary">
                        {{ "Set status"|t('app') }}
                    </button>
                    <div class="menu">
                        <ul>
                            <li><a class="action set-status" data-status="active">
                                <span class="status live"></span>{{ "Live"|t('app') }}
                            </a></li>
                            <li><a class="action set-status" data-status="inactive">
                                <span class="status disabled"></span>{{ "Disabled"|t('app') }}
                            </a></li>
                        </ul>
                    </div>
                </div>
                <form>
                    <button type="button" class="btn secondary menubtn" data-icon="settings" title="Actions"></button>
                    <div class="menu">
                        <ul>
                            <li><a class="action duplicate">{{ "Duplicate"|t('app') }}</a></li>
                            <li><hr></li>
                            <li><a class="action delete error">{{ "Delete"|t('app') }}</a></li>
                        </ul>
                    </div>
                </form>
            {% else %}
                <button type="button" class="btn secondary action restore">{{ "Restore"|t('app') }}</button>
                <button type="button" class="btn secondary action hard-delete error">{{ "Delete permanently"|t('app') }}</button>
            {% endif %}
        </div>
        <div class="flex flex-nowrap">
            <button type="button" class="btn" id="export-btn" tabindex="0" aria-expanded="false" title="Export smart links">Export…</button>
        </div>
    </div>
{% endblock %}

{% css %}
    /* Page info styling */
    .page-info {
        margin: 0 12px;
        color: #596673;
    }
    
    /* Pagination styles */
    .pagination {
        gap: 4px;
        align-items: center;
    }
    
    /* Selected rows */
    tbody tr.sel {
        background-color: #f3f7fc;
    }
    
    tbody tr.sel td {
        background-color: #f3f7fc;
    }
{% endcss %}

{% js %}
// Initialize menu buttons
document.querySelectorAll('.menubtn').forEach(btn => {
    if (typeof Craft !== 'undefined' && Craft.MenuBtn) {
        new Craft.MenuBtn(btn);
    } else if (typeof Garnish !== 'undefined' && Garnish.MenuBtn) {
        new Garnish.MenuBtn(btn);
    }
});

// Search input handling
const searchInput = document.querySelector('input[name="search"]');
const clearBtn = document.querySelector('.clear-btn');

if (searchInput && clearBtn) {
    // Show/hide clear button based on input
    searchInput.addEventListener('input', function() {
        if (this.value) {
            clearBtn.classList.remove('hidden');
        } else {
            clearBtn.classList.add('hidden');
        }
    });
    
    // Clear button functionality
    clearBtn.addEventListener('click', function(e) {
        e.preventDefault();
        searchInput.value = '';
        clearBtn.classList.add('hidden');
        searchInput.form.submit();
    });
}

// Initialize checkbox selection
$('.checkbox').on('click', function(e) {
    e.stopPropagation();
    var $checkbox = $(this);
    var isChecked = $checkbox.attr('aria-checked') === 'true';
    $checkbox.attr('aria-checked', !isChecked);
    
    // Update visual state
    if (!isChecked) {
        $checkbox.addClass('checked');
    } else {
        $checkbox.removeClass('checked');
    }
    
    // Handle row selection
    var $row = $checkbox.closest('tr');
    if ($row.length) {
        if (!isChecked) {
            $row.addClass('sel');
        } else {
            $row.removeClass('sel');
        }
    }
    
    // Handle select all
    if ($checkbox.closest('.selectallcontainer').length) {
        var newState = !isChecked;
        $('tbody .checkbox').each(function() {
            $(this).attr('aria-checked', newState);
            var $tr = $(this).closest('tr');
            if (newState) {
                $(this).addClass('checked');
                $tr.addClass('sel');
            } else {
                $(this).removeClass('checked');
                $tr.removeClass('sel');
            }
        });
    }
    
    // Update actions visibility
    updateActionsVisibility();
});

// Update actions visibility based on selection
function updateActionsVisibility() {
    var selectedCount = $('tbody tr.sel').length;
    if (selectedCount > 0) {
        $('#actions-container').removeClass('hidden').addClass('flex');
    } else {
        $('#actions-container').removeClass('flex').addClass('hidden');
    }
}

// Set status action
$(document).on('click', '.action.set-status', function(e) {
    e.preventDefault();
    
    var newStatus = $(this).data('status');
    var selectedIds = [];
    $('tbody tr.sel').each(function() {
        selectedIds.push($(this).data('id'));
    });
    
    if (selectedIds.length === 0) return;
    
    Craft.sendActionRequest('POST', 'smart-links/smart-links/set-status', {
        data: { 
            ids: selectedIds,
            status: newStatus
        }
    }).then((response) => {
        // Update the status visually for each row
        selectedIds.forEach(function(id) {
            var $row = $('tr[data-id="' + id + '"]');
            var $statusCell = $row.find('td[data-attr="active"]');
            if (newStatus === 'active') {
                $statusCell.html('<span class="status-label teal"><span class="status teal"></span><span class="status-label-text">{{ "Live"|t('app')|e('js') }}</span></span>');
            } else {
                $statusCell.html('<span class="status-label gray"><span class="status disabled"></span><span class="status-label-text">{{ "Disabled"|t('app')|e('js') }}</span></span>');
            }
            // Deselect the row
            $row.removeClass('sel');
            $row.find('.checkbox').attr('aria-checked', false).removeClass('checked');
        });
        
        updateActionsVisibility();
        Craft.cp.displayNotice(response.data.message);
    }).catch((error) => {
        Craft.cp.displayError('{{ "Could not update status."|t('smart-links')|e('js') }}');
    });
});

// Duplicate action
$(document).on('click', '.action.duplicate', function(e) {
    e.preventDefault();
    
    var selectedIds = [];
    $('tbody tr.sel').each(function() {
        selectedIds.push($(this).data('id'));
    });
    
    if (selectedIds.length === 0) return;
    
    var duplicatedCount = 0;
    var totalToDuplicate = selectedIds.length;
    
    selectedIds.forEach(function(id) {
        Craft.sendActionRequest('POST', 'smart-links/smart-links/duplicate', {
            data: { id: id }
        }).then((response) => {
            duplicatedCount++;
            if (duplicatedCount === totalToDuplicate) {
                // Reload the page to show the new duplicates
                location.reload();
            }
        }).catch((error) => {
            Craft.cp.displayError('{{ "Could not duplicate smart link."|t('smart-links')|e('js') }}');
        });
    });
    
    Craft.cp.displayNotice(selectedIds.length === 1 
        ? '{{ "Duplicating smart link..."|t('smart-links')|e('js') }}'
        : '{{ "Duplicating {count} smart links..."|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length)
    );
});

// Delete action
$(document).on('click', '.action.delete', function(e) {
    e.preventDefault();
    
    var selectedIds = [];
    $('tbody tr.sel').each(function() {
        selectedIds.push($(this).data('id'));
    });
    
    if (selectedIds.length === 0) return;
    
    var message = selectedIds.length === 1 
        ? '{{ "Are you sure you want to delete this smart link?"|t('smart-links')|e('js') }}'
        : '{{ "Are you sure you want to delete {count} smart links?"|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length);
    
    if (confirm(message)) {
        var deletedCount = 0;
        selectedIds.forEach(function(id) {
            Craft.sendActionRequest('POST', 'smart-links/smart-links/delete', {
                data: { id: id }
            }).then((response) => {
                $('tr[data-id="' + id + '"]').fadeOut(function() {
                    $(this).remove();
                    deletedCount++;
                    if (deletedCount === selectedIds.length) {
                        updateActionsVisibility();
                        // Check if table is empty
                        if ($('tbody tr').length === 0) {
                            location.reload();
                        }
                    }
                });
            }).catch((error) => {
                Craft.cp.displayError('{{ "Could not delete smart link."|t('smart-links')|e('js') }}');
            });
        });
        
        Craft.cp.displayNotice(selectedIds.length === 1 
            ? '{{ "Smart link deleted."|t('smart-links')|e('js') }}'
            : '{{ "{count} smart links deleted."|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length)
        );
    }
});


// Pagination
$('.prev-page:not(.disabled)').on('click', function() {
    var params = {
        status: '{{ currentStatus|e('js') }}',
        search: '{{ search|e('js') }}',
        sort: '{{ sort|e('js') }}',
        dir: '{{ dir|e('js') }}',
        page: {{ currentPage - 1 }}
    };
    {% if currentSite %}
        params.site = '{{ currentSite.handle|e('js') }}';
    {% endif %}
    window.location.href = '{{ url('smart-links/smartlinks') }}?' + $.param(params);
});

$('.next-page:not(.disabled)').on('click', function() {
    var params = {
        status: '{{ currentStatus|e('js') }}',
        search: '{{ search|e('js') }}',
        sort: '{{ sort|e('js') }}',
        dir: '{{ dir|e('js') }}',
        page: {{ currentPage + 1 }}
    };
    {% if currentSite %}
        params.site = '{{ currentSite.handle|e('js') }}';
    {% endif %}
    window.location.href = '{{ url('smart-links/smartlinks') }}?' + $.param(params);
});


// Sort buttons
$('th.orderable button').on('click', function() {
    var sortField = $(this).data('sort');
    var currentSort = '{{ sort }}';
    var currentDir = '{{ dir }}';
    var newDir = 'asc';
    
    if (sortField === currentSort) {
        newDir = currentDir === 'asc' ? 'desc' : 'asc';
    }
    
    var params = {
        status: '{{ currentStatus|e('js') }}',
        search: '{{ search|e('js') }}',
        sort: sortField,
        dir: newDir,
        page: 1
    };
    {% if currentSite %}
        params.site = '{{ currentSite.handle|e('js') }}';
    {% endif %}
    window.location.href = '{{ url('smart-links/smartlinks') }}?' + $.param(params);
});

// Restore action (for trashed items)
$(document).on('click', '.action.restore', function(e) {
    e.preventDefault();
    
    var selectedIds = [];
    $('tbody tr.sel').each(function() {
        selectedIds.push($(this).data('id'));
    });
    
    if (selectedIds.length === 0) return;
    
    var restoredCount = 0;
    selectedIds.forEach(function(id) {
        Craft.sendActionRequest('POST', 'smart-links/smart-links/restore', {
            data: { id: id }
        }).then((response) => {
            $('tr[data-id="' + id + '"]').fadeOut(function() {
                $(this).remove();
                restoredCount++;
                if (restoredCount === selectedIds.length) {
                    updateActionsVisibility();
                    // Check if table is empty
                    if ($('tbody tr').length === 0) {
                        location.reload();
                    }
                }
            });
        }).catch((error) => {
            Craft.cp.displayError('{{ "Could not restore smart link."|t('smart-links')|e('js') }}');
        });
    });
    
    Craft.cp.displayNotice(selectedIds.length === 1 
        ? '{{ "Smart link restored."|t('smart-links')|e('js') }}'
        : '{{ "{count} smart links restored."|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length)
    );
});

// Permanent delete action (for trashed items)
$(document).on('click', '.action.hard-delete', function(e) {
    e.preventDefault();
    
    var selectedIds = [];
    $('tbody tr.sel').each(function() {
        selectedIds.push($(this).data('id'));
    });
    
    if (selectedIds.length === 0) return;
    
    var message = selectedIds.length === 1 
        ? '{{ "Are you sure you want to permanently delete this smart link? This cannot be undone."|t('smart-links')|e('js') }}'
        : '{{ "Are you sure you want to permanently delete {count} smart links? This cannot be undone."|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length);
    
    if (confirm(message)) {
        var deletedCount = 0;
        selectedIds.forEach(function(id) {
            Craft.sendActionRequest('POST', 'smart-links/smart-links/hard-delete', {
                data: { id: id }
            }).then((response) => {
                $('tr[data-id="' + id + '"]').fadeOut(function() {
                    $(this).remove();
                    deletedCount++;
                    if (deletedCount === selectedIds.length) {
                        updateActionsVisibility();
                        // Check if table is empty
                        if ($('tbody tr').length === 0) {
                            location.reload();
                        }
                    }
                });
            }).catch((error) => {
                Craft.cp.displayError('{{ "Could not delete smart link permanently."|t('smart-links')|e('js') }}');
            });
        });
        
        Craft.cp.displayNotice(selectedIds.length === 1 
            ? '{{ "Smart link permanently deleted."|t('smart-links')|e('js') }}'
            : '{{ "{count} smart links permanently deleted."|t('smart-links', {count: '__COUNT__'})|e('js') }}'.replace('__COUNT__', selectedIds.length)
        );
    }
});

// Export button (placeholder for future implementation)
$('#export-btn').on('click', function(e) {
    e.preventDefault();
    Craft.cp.displayNotice('{{ "Export functionality coming soon"|t('smart-links')|e('js') }}');
});
{% endjs %}